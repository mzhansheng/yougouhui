cordova.define("com.phonegap.plugins.sqlite.SQLitePlugin",function(b,a,c){(function(){var f,d,i,g,h,e;e=this;d=function(k,l,j){var m;console.log("SQLitePlugin openargs: "+(JSON.stringify(k)));if(!(k&&k.name)){throw new Error("Cannot create a SQLitePlugin instance without a db name")}m=k.name;this.openargs=k;this.dbname=m;this.openSuccess=l;this.openError=j;this.openSuccess||(this.openSuccess=function(){console.log("DB opened: "+m)});this.openError||(this.openError=function(n){console.log(n.message)});this.bg=!k.bgType?(navigator.userAgent.match(/iPad/i))||(navigator.userAgent.match(/iPhone/i)):k.bgType===1;this.open(this.openSuccess,this.openError)};d.prototype.databaseFeatures={isSQLitePluginDatabase:true};d.prototype.openDBs={};d.prototype.txQ=[];d.prototype.addTransaction=function(j){this.txQ.push(j);if(this.txQ.length===1){j.start()}};d.prototype.transaction=function(k,j,l){this.addTransaction(new g(this,k,j,l,true))};d.prototype.startNextTransaction=function(){this.txQ.shift();if(this.txQ[0]){this.txQ[0].start()}};d.prototype.open=function(k,j){if(!(this.dbname in this.openDBs)){this.openDBs[this.dbname]=true;cordova.exec(k,j,"SQLitePlugin","open",[this.openargs])}};d.prototype.close=function(k,j){if(this.dbname in this.openDBs){delete this.openDBs[this.dbname];cordova.exec(null,null,"SQLitePlugin","close",[{path:this.dbname}])}};d.prototype.executeSql=function(l,p,o,j){var k,m,n;n=function(q,s){if(!!o){return o(s)}};k=function(q,r){if(!!j){return j(r)}};m=function(q){q.executeSql(l,p,n,k)};this.addTransaction(new g(this,m,k,n,false))};h=function(){return 1};d.prototype.executePragmaStatement=function(k,l,j){console.log("SQLitePlugin::executePragmaStatement");h=l;cordova.exec((function(){return 1}),j,"SQLitePlugin","executePragmaStatement",[this.dbname,k])};i={p1:function(l,j){var k;console.log("PRAGMA CB");k=h;h=function(){return 1};k(j)}};g=function(j,m,k,n,l){if(typeof m!=="function"){throw new Error("transaction expected a function")}this.db=j;this.fn=m;this.error=k;this.success=n;this.txlock=l;this.executes=[];if(l){this.executeSql("BEGIN",[],null,function(o,p){throw new Error("unable to begin transaction: "+p.message)})}};g.prototype.start=function(){var j;try{if(!this.fn){return}this.fn(this);this.fn=null;this.run()}catch(k){j=k;this.db.startNextTransaction();if(this.error){this.error(j)}}};g.prototype.executeSql=function(n,j,m,k){var l;l=this.executes.length;this.executes.push({success:m,error:k,qid:l,sql:n,params:j||[]})};g.prototype.handleStatementSuccess=function(k,j){var m,l;if(!k){return}l=j.rows||[];m={rows:{item:function(n){return l[n]},length:l.length},rowsAffected:j.rowsAffected||0,insertId:j.insertId||void 0};k(this,m)};g.prototype.handleStatementFailure=function(k,j){if(!k){throw new Error("a statement with no error handler failed: "+j.message)}if(k(this,j)){throw new Error("a statement error callback did not return false")}};g.prototype.run=function(){var j,m,p,l,k,r,t,n,s,o,q,u;q=null;s=[];j=this.executes;u=j.length;this.executes=[];o=this;m=function(v,w){return function(x){var y;try{if(w){o.handleStatementSuccess(j[v].success,x)}else{o.handleStatementFailure(j[v].error,x)}}catch(z){y=z;if(!q){q=y}}if(--u===0){if(q){o.abort(q)}else{if(o.executes.length>0){o.run()}else{o.finish()}}}}};p=0;k={};while(p<j.length){n=j[p];t=n.qid;k[t]={success:m(p,true),error:m(p,false)};s.push({qid:t,query:[n.sql].concat(n.params),sql:n.sql,params:n.params});p++}l=function(v){var B,z,x,y,A,w;for(A=0,w=v.length;A<w;A++){z=v[A];y=z.type;t=z.qid;x=z.result;B=k[t];if(B){if(B[y]){B[y](x)}}}};r=this.db.bg?"backgroundExecuteSqlBatch":"executeSqlBatch";cordova.exec(l,null,"SQLitePlugin",r,[{dbargs:{dbname:this.db.dbname},executes:s}])};g.prototype.abort=function(m){var k,l,j;if(this.finalized){return}j=this;l=function(n){n.db.startNextTransaction();if(n.error){n.error(m)}};k=function(n,o){n.db.startNextTransaction();if(n.error){n.error(new Error("error while trying to roll back: "+o.message))}};this.finalized=true;if(this.txlock){this.executeSql("ROLLBACK",[],l,k);this.run()}else{l(j)}};g.prototype.finish=function(){var k,l,j;if(this.finalized){return}j=this;l=function(m){m.db.startNextTransaction();if(m.success){m.success()}};k=function(m,n){m.db.startNextTransaction();if(m.error){m.error(new Error("error while trying to commit: "+n.message))}};this.finalized=true;if(this.txlock){this.executeSql("COMMIT",[],l,k);this.run()}else{l(j)}};f={opendb:function(){var k,m,l,j;if(arguments.length<1){return null}m=arguments[0];j=null;l=null;k=null;if(m.constructor===String){j={name:m};if(arguments.length>=5){l=arguments[4];if(arguments.length>5){k=arguments[5]}}}else{j=m;if(arguments.length>=2){l=arguments[1];if(arguments.length>2){k=arguments[2]}}}return new d(j,l,k)},deleteDb:function(k,l,j){return cordova.exec(l,j,"SQLitePlugin","delete",[{path:k}])}};e.SQLitePluginCallback=i;e.sqlitePlugin={sqliteFeatures:{isSQLitePlugin:true},openDatabase:f.opendb,deleteDatabase:f.deleteDb}}).call(this)});